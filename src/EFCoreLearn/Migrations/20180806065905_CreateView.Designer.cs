// <auto-generated />
using System;
using EFCoreLearn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreLearn.Migrations
{
    [DbContext(typeof(TestDbcontext))]
    [Migration("20180806065905_CreateView")]
    partial class CreateView
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreLearn.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("BlogId");

                    b.ToTable("Blog");

                    b.HasData(
                        new { BlogId = 1, Name = "1", Url = "www" }
                    );
                });

            modelBuilder.Entity("EFCoreLearn.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Test1");

                    b.Property<string>("Test2");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("EFCoreLearn.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Post");

                    b.HasData(
                        new { PostId = 1, BlogId = 1, Content = "123", Title = "123" },
                        new { PostId = 2, BlogId = 1, Content = "123", Title = "123" },
                        new { PostId = 3, BlogId = 1, Content = "123", Title = "123" }
                    );
                });

            modelBuilder.Entity("EFCoreLearn.Models.Order", b =>
                {
                    b.OwnsOne("EFCoreLearn.Models.Address", "Address", b1 =>
                        {
                            b1.Property<int?>("OrderId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City");

                            b1.Property<string>("Street");

                            b1.ToTable("Order");

                            b1.HasOne("EFCoreLearn.Models.Order")
                                .WithOne("Address")
                                .HasForeignKey("EFCoreLearn.Models.Address", "OrderId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("EFCoreLearn.Models.Post", b =>
                {
                    b.HasOne("EFCoreLearn.Models.Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
